/*
 * Copyright (C) 2015 Freescale Semiconductor, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
 
#include <dt-bindings/input/input.h>
#include "imx7d.dtsi"

/ {
	model = "Embedded Artists i.MX7 Dual COM Board";
	compatible = "fsl,imx7dea-com", "fsl,imx7d";

	memory@80000000 {
		device_type = "memory";
		reg = <0x80000000 0x80000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x14000000>;
			linux,cma-default;
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_vref_1v8: regulator@3 {
			compatible = "regulator-fixed";
			regulator-name = "vref-1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

	};

};

&adc1 {
	vref-supply = <&reg_vref_1v8>;
	status = "okay";
};

&adc2 {
	vref-supply = <&reg_vref_1v8>;
	status = "okay";
};

&cpu0 {
	cpu-supply = <&sw1a_reg>;
};

&cpu1 {
	cpu-supply = <&sw1a_reg>;
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	pinctrl-assert-gpios = <&gpio7 15 GPIO_ACTIVE_LOW>;
	assigned-clocks = <&clks IMX7D_ENET1_TIME_ROOT_SRC>,
			  <&clks IMX7D_ENET1_TIME_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>;
	assigned-clock-rates = <0>, <100000000>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;

			/* Properties for the Realtek PHY */
			rtl821x,aldps-disable;
			rtl821x,clkout-disable;

			/* Properties applied to both PHYs but only needed for Realtek PHY*/
			rx-internal-delay-ps = <2000>;
			tx-internal-delay-ps = <2000>;
			eee-broken-1000t;
		};
	};
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

        pmic: pfuze3000@8 {
                compatible = "fsl,pfuze3000";
                reg = <0x08>;

                regulators {
                        sw1a_reg: sw1a {
                                regulator-min-microvolt = <700000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-boot-on;
                                regulator-always-on;
                                regulator-ramp-delay = <6250>;
                        };

                        /* use sw1c_reg to align with pfuze100/pfuze200 */
                        sw1c_reg: sw1b {
                                regulator-min-microvolt = <700000>;
                                regulator-max-microvolt = <1475000>;
                                regulator-boot-on;
                                regulator-always-on;
                                regulator-ramp-delay = <6250>;
                        };

                        sw2_reg: sw2 {
                                regulator-min-microvolt = <1500000>;
                                regulator-max-microvolt = <1850000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        sw3a_reg: sw3 {
                                regulator-min-microvolt = <900000>;
                                regulator-max-microvolt = <1650000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        swbst_reg: swbst {
                                regulator-min-microvolt = <5000000>;
                                regulator-max-microvolt = <5150000>;
                        };

                        snvs_reg: vsnvs {
                                regulator-min-microvolt = <1000000>;
                                regulator-max-microvolt = <3000000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        vref_reg: vrefddr {
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        vgen1_reg: vldo1 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-always-on;
                        };

                        vgen2_reg: vldo2 {
                                regulator-min-microvolt = <800000>;
                                regulator-max-microvolt = <1550000>;
                                regulator-always-on;
                        };

                        vgen3_reg: vccsd {
                                regulator-min-microvolt = <1800000>;  /* Murata: VIO for SDIO interface */
                                regulator-max-microvolt = <3300000>;
				regulator-boot-on; /* Murata -- does this make difference? */
                                regulator-always-on;
                        };

                        vgen4_reg: v33 {
                                regulator-min-microvolt = <2850000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-always-on;
                        };

                        vgen5_reg: vldo3 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-always-on;
                        };

                        vgen6_reg: vldo4 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-always-on;
                        };
                };
        };

};

&i2c2 {
        clock-frequency = <100000>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c2>;
        status = "okay";
};

&i2c3 {
        clock-frequency = <100000>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c3>;
        status = "okay";
};

&i2c4 {
        clock-frequency = <100000>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c4>;
        status = "disabled";
};

&iomuxc {
	pinctrl-names = "default";

	imx7d-sdb {

		pinctrl_enet1: enet1grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO10__ENET1_MDIO		0x3
				MX7D_PAD_GPIO1_IO11__ENET1_MDC		0x3
				MX7D_PAD_ENET1_RGMII_TXC__ENET1_RGMII_TXC	0x1
				MX7D_PAD_ENET1_RGMII_TD0__ENET1_RGMII_TD0	0x1
				MX7D_PAD_ENET1_RGMII_TD1__ENET1_RGMII_TD1	0x1
				MX7D_PAD_ENET1_RGMII_TD2__ENET1_RGMII_TD2	0x1
				MX7D_PAD_ENET1_RGMII_TD3__ENET1_RGMII_TD3	0x1
				MX7D_PAD_ENET1_RGMII_TX_CTL__ENET1_RGMII_TX_CTL	0x1
				MX7D_PAD_ENET1_RGMII_RXC__ENET1_RGMII_RXC	0x1
				MX7D_PAD_ENET1_RGMII_RD0__ENET1_RGMII_RD0	0x1
				MX7D_PAD_ENET1_RGMII_RD1__ENET1_RGMII_RD1	0x1
				MX7D_PAD_ENET1_RGMII_RD2__ENET1_RGMII_RD2	0x1
				MX7D_PAD_ENET1_RGMII_RD3__ENET1_RGMII_RD3	0x1
				MX7D_PAD_ENET1_RGMII_RX_CTL__ENET1_RGMII_RX_CTL	0x1
				MX7D_PAD_ENET1_COL__GPIO7_IO15                  0x1
				MX7D_PAD_ENET1_RX_CLK__GPIO7_IO13               0x1
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX7D_PAD_I2C1_SDA__I2C1_SDA	0x4000007f
				MX7D_PAD_I2C1_SCL__I2C1_SCL	0x4000007f
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX7D_PAD_I2C2_SDA__I2C2_SDA	0x4000007f
				MX7D_PAD_I2C2_SCL__I2C2_SCL	0x4000007f
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX7D_PAD_I2C3_SDA__I2C3_SDA          0x4000007f
				MX7D_PAD_I2C3_SCL__I2C3_SCL          0x4000007f
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX7D_PAD_SAI1_RX_BCLK__I2C4_SDA		0x4000007f
				MX7D_PAD_SAI1_RX_SYNC__I2C4_SCL		0x4000007f
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD	0x59
				MX7D_PAD_SD3_CLK__SD3_CLK	0x19
				MX7D_PAD_SD3_DATA0__SD3_DATA0	0x59
				MX7D_PAD_SD3_DATA1__SD3_DATA1	0x59
				MX7D_PAD_SD3_DATA2__SD3_DATA2	0x59
				MX7D_PAD_SD3_DATA3__SD3_DATA3	0x59
				MX7D_PAD_SD3_DATA4__SD3_DATA4	0x59
				MX7D_PAD_SD3_DATA5__SD3_DATA5	0x59
				MX7D_PAD_SD3_DATA6__SD3_DATA6	0x59
				MX7D_PAD_SD3_DATA7__SD3_DATA7	0x59
				MX7D_PAD_SD3_STROBE__SD3_STROBE	0x19
				MX7D_PAD_SD3_RESET_B__SD3_RESET 0x59
			>;
		};

		pinctrl_usdhc3_100mhz: usdhc3grp_100mhz {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD	0x5a
				MX7D_PAD_SD3_CLK__SD3_CLK	0x1a
				MX7D_PAD_SD3_DATA0__SD3_DATA0	0x5a
				MX7D_PAD_SD3_DATA1__SD3_DATA1	0x5a
				MX7D_PAD_SD3_DATA2__SD3_DATA2	0x5a
				MX7D_PAD_SD3_DATA3__SD3_DATA3	0x5a
				MX7D_PAD_SD3_DATA4__SD3_DATA4	0x5a
				MX7D_PAD_SD3_DATA5__SD3_DATA5	0x5a
				MX7D_PAD_SD3_DATA6__SD3_DATA6	0x5a
				MX7D_PAD_SD3_DATA7__SD3_DATA7	0x5a
				MX7D_PAD_SD3_STROBE__SD3_STROBE	0x1a
				MX7D_PAD_SD3_RESET_B__SD3_RESET 0x59
			>;
		};

		pinctrl_usdhc3_200mhz: usdhc3grp_200mhz {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD	0x5b
				MX7D_PAD_SD3_CLK__SD3_CLK	0x1b
				MX7D_PAD_SD3_DATA0__SD3_DATA0	0x5b
				MX7D_PAD_SD3_DATA1__SD3_DATA1	0x5b
				MX7D_PAD_SD3_DATA2__SD3_DATA2	0x5b
				MX7D_PAD_SD3_DATA3__SD3_DATA3	0x5b
				MX7D_PAD_SD3_DATA4__SD3_DATA4	0x5b
				MX7D_PAD_SD3_DATA5__SD3_DATA5	0x5b
				MX7D_PAD_SD3_DATA6__SD3_DATA6	0x5b
				MX7D_PAD_SD3_DATA7__SD3_DATA7	0x5b
				MX7D_PAD_SD3_STROBE__SD3_STROBE	0x1b
				MX7D_PAD_SD3_RESET_B__SD3_RESET 0x59
			>;
		};

                pinctrl_qspi1_1: qspi1grp_1 {
                        fsl,pins = <
                                MX7D_PAD_EPDC_DATA00__QSPI_A_DATA0 0x51
                                MX7D_PAD_EPDC_DATA01__QSPI_A_DATA1 0x51
                                MX7D_PAD_EPDC_DATA02__QSPI_A_DATA2 0x51
                                MX7D_PAD_EPDC_DATA03__QSPI_A_DATA3 0x51
                                MX7D_PAD_EPDC_DATA05__QSPI_A_SCLK 0x51
                                MX7D_PAD_EPDC_DATA06__QSPI_A_SS0_B 0x51
                        >;
                };

	};
};

&sdma {
	status = "okay";
};

/* eMMC */
&usdhc3 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
	assigned-clocks = <&clks IMX7D_USDHC3_ROOT_CLK>;
	assigned-clock-rates = <100000000>;
	bus-width = <8>;
	tuning-step = <2>;
	non-removable;
	status = "okay";
};

&qspi1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_qspi1_1>;
        status = "okay";
        ddrsmp=<0>;

        flash0: n25q256a@0 {
                #address-cells = <1>;
                #size-cells = <1>;
                compatible = "jedex,spi-nor";
                spi-max-frequency = <40000000>;
		spi-nor,ddr-quad-read-dummy = <6>;
                reg = <0>;
        };
};

